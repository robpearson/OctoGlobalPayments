stages:
  - set-version
  - build
  # - deploy_development
  # - deploy_test
  # - deploy_production

set-version:
  stage: set-version
  script:
    - dayOfYear=$(date +%j)
    - hour=$(date +%H)
    - minutes=$(date +%M)
    - seconds=$(date +%S)
    - year=$(date +%y)
    - $(date +'%Y.%m.%d')
    - echo "$(date +'%Y.%m.%d').$CI_JOB_ID" >> version.txt
  artifacts:
    paths:
      [ version.txt ]

build:
  stage: build
  image: docker:latest
  services:
    - docker:dind
  script:
    - VERSION_NUMBER=$(cat version.txt) 
    - docker login -u $DOCKER_REGISTRY_USER -p $DOCKER_REGISTRY_PASSWORD $DOCKER_REGISTRY
    - docker build -t $DOCKER_REGISTRY_USER/octopublite-api:$VERSION_NUMBER -f ./api/Dockerfile ./api
    - docker push $DOCKER_REGISTRY_USER/octopublite-api:$VERSION_NUMBER
 
# deploy_development:
#   stage: deploy_development
#   image: octopuslabs/gitlab-octocli
#   script: 
#     - VERSION_NUMBER=$(cat version.txt) 
#     - octo create-release --project="api" --ref="main" --channel="Default" --version="$VERSION_NUMBER" --deployTo="Development" --server="$OCTOPUS_SAMPLES_URL" --apiKey="$OCTOPUS_API_KEY" --space="Adam Close" --progress  --waitForDeployment

# deploy_test:
#   stage: deploy_test
#   image: octopuslabs/gitlab-octocli
#   script: 
#     - VERSION_NUMBER=$(cat version.txt) 
#     - octo deploy-release --project="api" --releaseNumber="$VERSION_NUMBER" --deployto="Test" --server="$OCTOPUS_SAMPLES_URL" --apiKey="$OCTOPUS_API_KEY" --space="Adam Close"  --progress --waitForDeployment 
#   dependencies:
#    - set-version
#    - build
#    - deploy_development
   

# deploy_production:     
#   stage: deploy_production
#   environment: production
#   when: manual
#   dependencies:
#   - set-version
#   - build
#   - deploy_development
#   - deploy_test
#   allow_failure: false
#   script:
#     - echo "Deploying application to production..."
#     - echo "Application successfully deployed in production."



